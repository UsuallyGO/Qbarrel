IF(WIN32)
    CMAKE_MINIMUM_REQUIRED(VERSION 2.4.6 FATAL_ERROR)
ELSE(WIN32)
    IF(APPLE)
        CMAKE_MINIMUM_REQUIRED(VERSION 2.6.0 FATAL_ERROR)
    ELSE(APPLE)
        CMAKE_MINIMUM_REQUIRED(VERSION 2.4.4 FATAL_ERROR)
    ENDIF(APPLE)
ENDIF(WIN32)

IF(COMMAND cmake_policy)
    CMAKE_POLICY(SET CMP0003 NEW)
ENDIF()

PROJECT(QBarrelTest)

SET(QBarrelTest ${CMAKE_INSTALL_PREFIX}/include)
INCLUDE_DIRECTORIES(${QBarrelTest})

IF(WIN32)
    IF(MSVC)
    ELSE(MSVC)
        FIND_LIBRARY(libqbarrel "qbarrel.dll")
    ENDIF(MSVC)
ELSE(WIN32)
    FIND_LIBRARY(libqbarrel "qbarrel")
ENDIF(WIN32)

SET(Qdicttest dict_test.c)
ADD_EXECUTABLE(dict_test ${Qdicttest})
IF(NOT libqbarrel MATCHES libqbarrel-NOTFOUND)
    TARGET_LINK_LIBRARIES(dict_test ${libqbarrel})
ENDIF()

SET(Qevttest_server evt_test_server.c)
ADD_EXECUTABLE(evttest_server ${Qevttest_server})
IF(NOT libqbarrel MATCHES libqbarrel-NOTFOUND)
    TARGET_LINK_LIBRARIES(evttest_server ${libqbarrel})
ENDIF()

SET(Qevttest_client evt_test_client.c)
ADD_EXECUTABLE(evttest_client ${Qevttest_client})
IF(NOT libqbarrel MATCHES libqbarrel-NOTFOUND)
    TARGET_LINK_LIBRARIES(evttest_client ${libqbarrel})
ENDIF()